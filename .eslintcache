[{"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/index.tsx":"1","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/App.tsx":"2","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/App.styles.ts":"3","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Item/Item.tsx":"4","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Item/Item.styles.ts":"5","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Cart/Cart.tsx":"6","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Cart/Cart.styles.ts":"7","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/CartItem/CartItem.tsx":"8","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/CartItem/CartItem.styles.ts":"9"},{"size":318,"mtime":1611534395557,"results":"10","hashOfConfig":"11"},{"size":2383,"mtime":1611775817323,"results":"12","hashOfConfig":"11"},{"size":300,"mtime":1611769554974,"results":"13","hashOfConfig":"11"},{"size":801,"mtime":1611773707272,"results":"14","hashOfConfig":"11"},{"size":478,"mtime":1611591177461,"results":"15","hashOfConfig":"11"},{"size":690,"mtime":1611788209092,"results":"16","hashOfConfig":"11"},{"size":215,"mtime":1611772875579,"results":"17","hashOfConfig":"11"},{"size":1479,"mtime":1611790824949,"results":"18","hashOfConfig":"11"},{"size":429,"mtime":1611773346762,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1xbmfb0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/index.tsx",[],["40","41"],"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/App.tsx",["42","43"],"import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\n//comps\nimport Item from \"./Item/Item\";\nimport Cart from \"./Cart/Cart\";\n\n//estilos\nimport { Wrapper, StyledButton } from \"./App.styles\";\nimport { functionalUpdate } from \"react-query/types/core/utils\";\n//tipos\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> => //data returned from fetch item its an array\n  //1 await for himself and another to convert to JSON\n  await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]); //the type of the cartItem its defined here\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"products\",\n    getProducts\n  );\n  const getTotalItems = (items: CartItemType[]) => null;\n  const handleAddToCart = (clickedItem: CartItemType) => null;\n  const handleRemoveFromCart = () => null;\n  if (isLoading) return <LinearProgress />; //os indicadores de progreso informan a los usuarios acerca del estado de procesos activos, tales como cargar una aplicaci√≥n, enviar un formulario o guardar actualizaciones.\n  if (error) return <div>Something went wrong ...</div>;\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\"></Badge>\n        <AddShoppingCartIcon />\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","/Users/ivanrubio/Documents/GitHub/shoping-cart/src/App.styles.ts",[],"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Item/Item.tsx",[],"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Item/Item.styles.ts",[],"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Cart/Cart.tsx",[],"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/Cart/Cart.styles.ts",[],"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/CartItem/CartItem.tsx",[],"/Users/ivanrubio/Documents/GitHub/shoping-cart/src/CartItem/CartItem.styles.ts",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":14,"column":10,"nodeType":"50","messageId":"51","endLine":14,"endColumn":26},{"ruleId":"48","severity":1,"message":"52","line":32,"column":21,"nodeType":"50","messageId":"51","endLine":32,"endColumn":33},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'functionalUpdate' is defined but never used.","Identifier","unusedVar","'setCartItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]